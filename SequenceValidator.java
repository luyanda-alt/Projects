/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Project;

/**
 *
 * @author Pooja, Simarin
 */
import java.awt.Color;
import java.util.ArrayList;

enum State {
    START, FOUND, STILL_AT, STILL_GC, FAIL
}

public class SequenceValidator extends javax.swing.JFrame {

    /**
     * Creates new form SequenceValidator
     */
    public SequenceValidator() {
        initComponents();
        this.setLocationRelativeTo(null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        validate = new javax.swing.JButton();
        okay = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        clear = new javax.swing.JButton();
        seq = new javax.swing.JTextField();
        results = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setPreferredSize(new java.awt.Dimension(1000, 700));

        validate.setBackground(new java.awt.Color(0, 0, 0));
        validate.setFont(new java.awt.Font("Lucida Bright", 3, 36)); // NOI18N
        validate.setForeground(new java.awt.Color(51, 255, 0));
        validate.setText("VALIDATE");
        validate.setToolTipText("VALIDATE INPUT SEQUENCE");
        validate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                validateActionPerformed(evt);
            }
        });

        okay.setBackground(new java.awt.Color(0, 0, 0));
        okay.setFont(new java.awt.Font("Lucida Bright", 3, 24)); // NOI18N
        okay.setForeground(new java.awt.Color(255, 255, 255));
        okay.setText("BACK");
        okay.setToolTipText("GO BACK TO THE WELCOME FORM");
        okay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okayActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Bright", 3, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 255, 0));
        jLabel1.setText("SEQUENCE VALIDATOR");

        jLabel3.setFont(new java.awt.Font("Lucida Bright", 3, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 0));
        jLabel3.setText("ENTER DNA SEQUENCE:");

        clear.setBackground(new java.awt.Color(0, 0, 0));
        clear.setFont(new java.awt.Font("Lucida Bright", 3, 24)); // NOI18N
        clear.setForeground(new java.awt.Color(255, 255, 255));
        clear.setText("CLEAR");
        clear.setToolTipText("CLEAR INPUT");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        seq.setBackground(new java.awt.Color(0, 0, 0));
        seq.setFont(new java.awt.Font("Candara", 3, 36)); // NOI18N
        seq.setForeground(new java.awt.Color(255, 255, 255));
        seq.setName(""); // NOI18N
        seq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seqActionPerformed(evt);
            }
        });

        results.setEditable(false);
        results.setBackground(new java.awt.Color(0, 0, 0));
        results.setFont(new java.awt.Font("Candara", 3, 36)); // NOI18N
        results.setForeground(new java.awt.Color(255, 255, 255));
        results.setName("sequenceField2"); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(206, 206, 206)
                .addComponent(jLabel1)
                .addGap(0, 208, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(okay, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(249, 249, 249))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(seq, javax.swing.GroupLayout.PREFERRED_SIZE, 511, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(224, 224, 224))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(validate)
                        .addGap(361, 361, 361))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(results, javax.swing.GroupLayout.PREFERRED_SIZE, 649, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(158, 158, 158))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(clear)
                        .addGap(411, 411, 411))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel1)
                .addGap(37, 37, 37)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(seq, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addComponent(validate)
                .addGap(61, 61, 61)
                .addComponent(results, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addComponent(clear)
                .addGap(42, 42, 42)
                .addComponent(okay, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public class DNA {

        private State current;

        public DNA() {
            current = State.START;
        }

        //Manages the tranitions of the Finite Automata
        public State transition(Nucleotide nucleotide) {
            if (current == State.START) {
                if ((nucleotide.current == 'A' && nucleotide.next == 'T') || (nucleotide.current == 'T' && nucleotide.next == 'A')) {
                    current = State.STILL_AT;
                } else if ((nucleotide.current == 'C' && nucleotide.next == 'G') || (nucleotide.current == 'G' && nucleotide.next == 'C')) {
                    current = State.STILL_GC;
                } else {
                    current = State.FAIL;
                }
            } else if (current == State.STILL_AT || current == State.STILL_GC) {
                if ((nucleotide.current == 'A' && nucleotide.next == 'T') || (nucleotide.current == 'T' && nucleotide.next == 'A')) {
                    current = State.FOUND;
                } else if ((nucleotide.current == 'C' && nucleotide.next == 'G') || (nucleotide.current == 'G' && nucleotide.next == 'C')) {
                    current = State.FOUND;
                } else {
                    current = State.FAIL;
                }
            } else if (current == State.FOUND) {
                if ((nucleotide.current == 'A' && nucleotide.next == 'T') || (nucleotide.current == 'T' && nucleotide.next == 'A')) {
                    current = State.STILL_AT;
                } else if ((nucleotide.current == 'C' && nucleotide.next == 'G') || (nucleotide.current == 'G' && nucleotide.next == 'C')) {
                    current = State.STILL_GC;
                } else {
                    current = State.FAIL;
                }
            }
            return current;
        }

    }

    public class Nucleotide {

        char current;
        char next;

        public Nucleotide(char currentNew, char nextNew) {
            current = currentNew;
            next = nextNew;
        }

        public Nucleotide(char currentNew) {
            current = currentNew;
        }

    }

    public void executeDNAAnalysis() {
        DNA dna = new DNA();
        String strand = seq.getText().toUpperCase();
        if (strand.length() % 2 != 0) {
            results.setText("INVALID-STRING LENGTH MUST BE EVEN");
            results.setBackground(Color.red);

        }
        int i = 0;
        ArrayList<Nucleotide> pairs = new ArrayList<Nucleotide>();
        while (i < strand.length()) {
            Nucleotide n1 = new Nucleotide(strand.charAt(i), strand.charAt(i + 1));
            pairs.add(n1);
            i += 2;
        }

        for (i = 0; i < pairs.size(); i++) {
            State state = dna.transition(pairs.get(i));
            if (i == pairs.size() - 1) {
                if (state == State.FAIL) {//changed this line only
                    results.setText("ERROR - INCORRECT PATTERN IDENTIFIED");
                    results.setBackground(Color.red);

                } else {
                    results.setText("PATTERN IDENTIFIED IS VALID");
                    results.setBackground(Color.green);
                }
            }
        }
    }


    private void validateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_validateActionPerformed

        executeDNAAnalysis();


    }//GEN-LAST:event_validateActionPerformed

    private void okayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okayActionPerformed

        //Closes form and returns to welcome page
        Welcome w = new Welcome();
        w.show();
        dispose();
    }//GEN-LAST:event_okayActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        seq.setText("");
        results.setText("");
        results.setBackground(Color.black);


    }//GEN-LAST:event_clearActionPerformed

    private void seqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seqActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_seqActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SequenceValidator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SequenceValidator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SequenceValidator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SequenceValidator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SequenceValidator().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clear;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton okay;
    private javax.swing.JTextField results;
    private javax.swing.JTextField seq;
    private javax.swing.JButton validate;
    // End of variables declaration//GEN-END:variables
}
