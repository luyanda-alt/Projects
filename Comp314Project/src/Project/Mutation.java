/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Project;

/**
 *
 * @author Simarin, Jaan, Andile
 */
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.JTextArea;

public class Mutation extends javax.swing.JFrame {

    enum State {
        START, FOUND, NOT_FOUND
    }

    public static State Transition(int i, State currentstate) {
        if (i == 1) {
            return State.NOT_FOUND;
        } else if (i == 0) {
            return State.FOUND;
        }
        return null;
    }

    public static State identifySeq(ArrayList<Nucleotide> n1, ArrayList<Nucleotide> n2, JTextArea jTextArea1) {
        int emission = 0;
        State currentState = State.START;
        for (int i = 0; i < n1.size(); i++) {
            if (n1.get(i).current == n2.get(i).current) {
                if (currentState != State.FOUND) {
                    emission = 1;
                    currentState = Transition(emission, currentState);//REMAINS IN A NOT FOUND STATE
                }//ELSE IT REMAINS IN A FOUND STATE
            } else {
                emission = 0;
                jTextArea1.append("\nMutation Found: " + n1.get(i).current + "-----" + n2.get(i).current);
                currentState = Transition(emission, currentState);//REMAINS IN A FOUND STATE AND ENDS
            }
        }

        return currentState;
    }

    /**
     * Creates new form Mutation
     */
    public Mutation() {
        initComponents();
        this.setLocationRelativeTo(null);

    }

    public boolean isValidSequence(String sequence) {

        boolean bflag = true;
        String validNucleotides = "ACGTU";//These are the only valid nuceltoides
        for (int i = 0; i < sequence.length(); i++) {
            if (validNucleotides.indexOf(sequence.charAt(i)) == -1) {
                bflag = false;
                break;
            }

        }
        return bflag;

    }

    public class Nucleotide {

        char current;
        char next;

        public Nucleotide(char currentNew, char nextNew) {
            current = currentNew;
            next = nextNew;
        }

        public Nucleotide(char currentNew) {
            current = currentNew;
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        seq1 = new javax.swing.JTextField();
        seq2 = new javax.swing.JTextField();
        similarity = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        clear = new javax.swing.JButton();
        okay2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        result = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));
        jPanel2.setToolTipText("");
        jPanel2.setPreferredSize(new java.awt.Dimension(1000, 700));

        seq1.setBackground(new java.awt.Color(0, 0, 0));
        seq1.setFont(new java.awt.Font("Candara", 3, 36)); // NOI18N
        seq1.setForeground(new java.awt.Color(255, 255, 255));
        seq1.setName("seq"); // NOI18N
        seq1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seq1ActionPerformed(evt);
            }
        });

        seq2.setBackground(new java.awt.Color(0, 0, 0));
        seq2.setFont(new java.awt.Font("Candara", 3, 36)); // NOI18N
        seq2.setForeground(new java.awt.Color(255, 255, 255));
        seq2.setName("result"); // NOI18N

        similarity.setBackground(new java.awt.Color(0, 0, 0));
        similarity.setFont(new java.awt.Font("Lucida Bright", 3, 36)); // NOI18N
        similarity.setForeground(new java.awt.Color(51, 255, 0));
        similarity.setText("DETERMINE MUTATIONS");
        similarity.setToolTipText("");
        similarity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                similarityActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Bright", 3, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 255, 0));
        jLabel1.setText("MUTATION CHECKER");

        jLabel2.setFont(new java.awt.Font("Lucida Bright", 3, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setText("ENTER NEW DNA SEQUENCE:");

        jLabel3.setFont(new java.awt.Font("Lucida Bright", 3, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 0));
        jLabel3.setText("ENTER PREVIOUS DNA SEQUENCE:");

        clear.setBackground(new java.awt.Color(0, 0, 0));
        clear.setFont(new java.awt.Font("Lucida Bright", 3, 24)); // NOI18N
        clear.setForeground(new java.awt.Color(255, 255, 255));
        clear.setText("CLEAR");
        clear.setToolTipText("");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        okay2.setBackground(new java.awt.Color(0, 0, 0));
        okay2.setFont(new java.awt.Font("Lucida Bright", 3, 24)); // NOI18N
        okay2.setForeground(new java.awt.Color(255, 255, 255));
        okay2.setText("BACK");
        okay2.setToolTipText("Click Button To Exit Application");
        okay2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okay2ActionPerformed(evt);
            }
        });

        result.setBackground(new java.awt.Color(0, 0, 0));
        result.setColumns(20);
        result.setFont(new java.awt.Font("Lucida Bright", 3, 24)); // NOI18N
        result.setForeground(new java.awt.Color(255, 255, 255));
        result.setRows(5);
        jScrollPane2.setViewportView(result);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(seq1, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(298, 298, 298))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(seq2, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(293, 293, 293))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(similarity, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(208, 208, 208))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(180, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(221, 221, 221))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(clear)
                        .addGap(306, 306, 306)
                        .addComponent(okay2, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(170, 170, 170))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 576, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(188, 188, 188))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(seq1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(seq2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 249, Short.MAX_VALUE)
                        .addComponent(okay2)
                        .addGap(60, 60, 60))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(similarity)
                        .addGap(27, 27, 27)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(clear)
                        .addContainerGap(74, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 663, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okay2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okay2ActionPerformed

        //Returns to the welcome page
        Welcome w = new Welcome();
        w.show();
        dispose();
    }//GEN-LAST:event_okay2ActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        seq1.setText("");
        seq2.setText("");
        result.setText("");
        result.setBackground(Color.black);
    }//GEN-LAST:event_clearActionPerformed

    private void similarityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_similarityActionPerformed

        String dnaSeq_1 = seq1.getText();
        String dnaSeq_2 = seq2.getText();
        if (isValidSequence(dnaSeq_1.toUpperCase()) && isValidSequence(dnaSeq_2.toUpperCase()) && (dnaSeq_1.length() == dnaSeq_2.length())) {

            ArrayList<Nucleotide> n1 = new ArrayList<>();
            //Nucleotide 1
            for (int i = 0; i < dnaSeq_1.length(); i++) {
                Nucleotide n = new Nucleotide(dnaSeq_1.charAt(i));
                n1.add(n);
            }
            ArrayList<Nucleotide> n2 = new ArrayList<>();
            //Nucleotide 2
            for (int i = 0; i < dnaSeq_2.length(); i++) {
                Nucleotide n = new Nucleotide(dnaSeq_2.charAt(i));
                n2.add(n);
            }

            if (identifySeq(n1, n2, result) == State.FOUND) {
                result.append("\nMUTATION FOUND");
                result.setBackground(Color.green);
            } else {
                result.append("\nNO HAS BEEN MUTATION FOUND");
                result.setBackground(Color.red);
            }

        } else {
            result.setText("Invalid Sequence Entered!");
            result.setBackground(Color.red);

        }


    }//GEN-LAST:event_similarityActionPerformed

    private void seq1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seq1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_seq1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Mutation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Mutation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Mutation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Mutation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Mutation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clear;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton okay2;
    private javax.swing.JTextArea result;
    private javax.swing.JTextField seq1;
    private javax.swing.JTextField seq2;
    private javax.swing.JButton similarity;
    // End of variables declaration//GEN-END:variables
}
